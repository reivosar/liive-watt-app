version: "3.8"

services:
  db:
    build:
      context: ./db
    command: ["postgres"]
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d

  backend:
    build:
      context: ./backend
    command: ["mix", "phx.server"]
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - backend_deps:/app/deps
      - backend_build:/app/_build

  frontend:
    build:
      context: ./frontend
    command: ["nginx", "-g", "daemon off;"]
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules

  batch:
    build:
      context: ./batch
    command: ["/bin/sh", "-c", "crond -f -l 2 && tail -f /var/log/cron.log"]
    env_file:
      - .env
    volumes:
      - ./batch/app:/app
      - ./batch/logs:/var/log
    depends_on:
      - db

volumes:
  postgres_data:
  backend_deps:
  backend_build:
  frontend_node_modules:
